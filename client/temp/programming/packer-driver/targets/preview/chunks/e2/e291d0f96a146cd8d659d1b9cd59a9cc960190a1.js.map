{"version":3,"sources":["file:///E:/skynet_game_server/skynet_black/client/assets/scripts/ui/UIManager.ts"],"names":["_decorator","Node","instantiate","Canvas","find","EventManager","ccclass","property","UILayer","UIManager","getInstance","instance","constructor","canvas","layers","uiConfigs","Map","uiInstances","uiCache","eventManager","initializeLayers","canvasNode","getComponent","console","error","i","TOP","layerNode","parent","node","setSiblingIndex","log","registerUI","name","config","set","registerUIs","configs","showUI","data","get","singleton","has","existingUI","active","bringToFront","notifyUIEvent","uiNode","getFromCache","createUIInstance","layer","hideUI","destroy","warn","destroyUI","cache","addToCache","delete","removeFromCache","toggleUI","isUIShown","getUI","closeAllUI","except","exceptSet","Set","closeUIByLayer","prefab","cachedNode","event","emit","cleanup","clear","getStats","totalConfigs","size","activeInstances","cachedInstances","length"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Prefab, instantiate, Canvas, find } from 'cc';\nimport { EventManager } from '../managers/EventManager';\n\nconst { ccclass, property } = _decorator;\n\nexport enum UILayer {\n    BACKGROUND = 0,\n    NORMAL = 1,\n    POPUP = 2,\n    SYSTEM = 3,\n    TOP = 4\n}\n\nexport interface UIConfig {\n    prefab: Prefab;\n    layer: UILayer;\n    singleton: boolean;\n    cache: boolean;\n}\n\n@ccclass('UIManager')\nexport class UIManager {\n    private static instance: UIManager;\n    \n    private canvas: Canvas = null!;\n    private layers: Node[] = [];\n    private uiConfigs: Map<string, UIConfig> = new Map();\n    private uiInstances: Map<string, Node> = new Map();\n    private uiCache: Map<string, Node> = new Map();\n    private eventManager: EventManager;\n    \n    public static getInstance(): UIManager {\n        if (!UIManager.instance) {\n            UIManager.instance = new UIManager();\n        }\n        return UIManager.instance;\n    }\n    \n    private constructor() {\n        this.eventManager = EventManager.getInstance();\n        this.initializeLayers();\n    }\n    \n    private initializeLayers(): void {\n        // 查找Canvas节点\n        const canvasNode = find('Canvas');\n        if (canvasNode) {\n            this.canvas = canvasNode.getComponent(Canvas)!;\n        }\n        \n        if (!this.canvas) {\n            console.error('Canvas not found! UI system may not work properly.');\n            return;\n        }\n        \n        // 创建UI层级\n        for (let i = 0; i <= UILayer.TOP; i++) {\n            const layerNode = new Node(`UILayer_${i}`);\n            layerNode.parent = this.canvas.node;\n            layerNode.setSiblingIndex(i);\n            this.layers[i] = layerNode;\n        }\n        \n        console.log('UI layers initialized');\n    }\n    \n    // 注册UI配置\n    public registerUI(name: string, config: UIConfig): void {\n        this.uiConfigs.set(name, config);\n    }\n    \n    // 批量注册UI\n    public registerUIs(configs: { [name: string]: UIConfig }): void {\n        for (const name in configs) {\n            this.registerUI(name, configs[name]);\n        }\n    }\n    \n    // 显示UI\n    public async showUI(name: string, data?: any): Promise<Node | null> {\n        const config = this.uiConfigs.get(name);\n        if (!config) {\n            console.error(`UI config not found: ${name}`);\n            return null;\n        }\n        \n        // 检查单例模式\n        if (config.singleton && this.uiInstances.has(name)) {\n            const existingUI = this.uiInstances.get(name)!;\n            existingUI.active = true;\n            this.bringToFront(existingUI);\n            \n            // 触发显示事件\n            this.notifyUIEvent(name, 'show', data);\n            return existingUI;\n        }\n        \n        // 从缓存获取或创建新实例\n        let uiNode = this.getFromCache(name);\n        if (!uiNode) {\n            uiNode = this.createUIInstance(name, config);\n            if (!uiNode) {\n                return null;\n            }\n        }\n        \n        // 设置父节点和层级\n        uiNode.parent = this.layers[config.layer];\n        uiNode.active = true;\n        \n        // 记录实例\n        if (config.singleton) {\n            this.uiInstances.set(name, uiNode);\n        }\n        \n        // 触发显示事件\n        this.notifyUIEvent(name, 'show', data);\n        \n        console.log(`UI shown: ${name}`);\n        return uiNode;\n    }\n    \n    // 隐藏UI\n    public hideUI(name: string, destroy: boolean = false): void {\n        const uiNode = this.uiInstances.get(name);\n        if (!uiNode) {\n            console.warn(`UI not found: ${name}`);\n            return;\n        }\n        \n        uiNode.active = false;\n        \n        // 触发隐藏事件\n        this.notifyUIEvent(name, 'hide');\n        \n        if (destroy) {\n            this.destroyUI(name);\n        } else {\n            const config = this.uiConfigs.get(name);\n            if (config && config.cache) {\n                this.addToCache(name, uiNode);\n            }\n        }\n        \n        console.log(`UI hidden: ${name}`);\n    }\n    \n    // 销毁UI\n    public destroyUI(name: string): void {\n        const uiNode = this.uiInstances.get(name);\n        if (uiNode) {\n            uiNode.destroy();\n            this.uiInstances.delete(name);\n        }\n        \n        // 从缓存中移除\n        this.removeFromCache(name);\n        \n        // 触发销毁事件\n        this.notifyUIEvent(name, 'destroy');\n        \n        console.log(`UI destroyed: ${name}`);\n    }\n    \n    // 切换UI显示状态\n    public toggleUI(name: string, data?: any): void {\n        const uiNode = this.uiInstances.get(name);\n        if (uiNode && uiNode.active) {\n            this.hideUI(name);\n        } else {\n            this.showUI(name, data);\n        }\n    }\n    \n    // 检查UI是否显示\n    public isUIShown(name: string): boolean {\n        const uiNode = this.uiInstances.get(name);\n        return uiNode ? uiNode.active : false;\n    }\n    \n    // 获取UI实例\n    public getUI(name: string): Node | null {\n        return this.uiInstances.get(name) || null;\n    }\n    \n    // 关闭所有UI\n    public closeAllUI(except?: string[]): void {\n        const exceptSet = new Set(except || []);\n        \n        for (const [name, uiNode] of this.uiInstances) {\n            if (!exceptSet.has(name) && uiNode.active) {\n                this.hideUI(name);\n            }\n        }\n    }\n    \n    // 关闭指定层级的所有UI\n    public closeUIByLayer(layer: UILayer): void {\n        for (const [name, uiNode] of this.uiInstances) {\n            const config = this.uiConfigs.get(name);\n            if (config && config.layer === layer && uiNode.active) {\n                this.hideUI(name);\n            }\n        }\n    }\n    \n    // 将UI置于最前\n    public bringToFront(uiNode: Node): void {\n        if (uiNode.parent) {\n            uiNode.setSiblingIndex(-1);\n        }\n    }\n    \n    // 创建UI实例\n    private createUIInstance(name: string, config: UIConfig): Node | null {\n        if (!config.prefab) {\n            console.error(`UI prefab not found: ${name}`);\n            return null;\n        }\n        \n        try {\n            const uiNode = instantiate(config.prefab);\n            uiNode.name = name;\n            return uiNode;\n        } catch (error) {\n            console.error(`Failed to create UI instance: ${name}`, error);\n            return null;\n        }\n    }\n    \n    // 缓存管理\n    private addToCache(name: string, uiNode: Node): void {\n        const config = this.uiConfigs.get(name);\n        if (config && config.cache) {\n            uiNode.parent = null;\n            this.uiCache.set(name, uiNode);\n        }\n    }\n    \n    private getFromCache(name: string): Node | null {\n        return this.uiCache.get(name) || null;\n    }\n    \n    private removeFromCache(name: string): void {\n        const cachedNode = this.uiCache.get(name);\n        if (cachedNode) {\n            cachedNode.destroy();\n            this.uiCache.delete(name);\n        }\n    }\n    \n    // 事件通知\n    private notifyUIEvent(name: string, event: string, data?: any): void {\n        this.eventManager.emit(`ui_${name}_${event}`, data);\n        this.eventManager.emit(`ui_${event}`, name, data);\n    }\n    \n    // 清理所有UI\n    public cleanup(): void {\n        // 销毁所有实例\n        for (const [name] of this.uiInstances) {\n            this.destroyUI(name);\n        }\n        \n        // 清理缓存\n        for (const [name, cachedNode] of this.uiCache) {\n            cachedNode.destroy();\n        }\n        this.uiCache.clear();\n        \n        console.log('UI system cleaned up');\n    }\n    \n    // 获取统计信息\n    public getStats(): any {\n        return {\n            totalConfigs: this.uiConfigs.size,\n            activeInstances: this.uiInstances.size,\n            cachedInstances: this.uiCache.size,\n            layers: this.layers.length\n        };\n    }\n}\n"]}
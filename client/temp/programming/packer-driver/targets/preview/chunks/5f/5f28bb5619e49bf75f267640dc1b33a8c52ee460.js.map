{"version":3,"sources":["file:///E:/skynet_game_server/skynet_black/client/assets/scripts/managers/GameDataManager.ts"],"names":["_decorator","EventManager","ccclass","GameDataEvent","GameDataManager","getInstance","instance","constructor","eventManager","playerData","farmData","inventory","sessionToken","setSessionToken","token","localStorage","setItem","getSessionToken","getItem","clearSessionToken","removeItem","setPlayerData","data","id","player_id","name","level","gold","energy","maxEnergy","max_energy","avatarId","avatar_id","position","x","x_position","y","y_position","mapId","map_id","emit","PLAYER_DATA_UPDATED","getPlayerData","updatePlayerPosition","undefined","updatePlayerGold","updatePlayerEnergy","setFarmData","farmId","farm_id","size","width","height","plots","buildings","moneyEarned","money_earned","FARM_DATA_UPDATED","getFarmData","setInventory","items","INVENTORY_UPDATED","getInventory","addItemToInventory","item","push","removeItemFromInventory","slot","index","findIndex","splice","updateInventoryItem","quantity","find","isLoggedIn","clearAllData","saveToLocal","JSON","stringify","length","error","console","loadFromLocal","playerDataStr","parse","farmDataStr","inventoryDataStr"],"mappings":"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","sourcesContent":["import { _decorator } from 'cc';\nimport { EventManager } from './EventManager';\n\nconst { ccclass } = _decorator;\n\nexport interface PlayerData {\n    id: number;\n    name: string;\n    level: number;\n    gold: number;\n    energy: number;\n    maxEnergy: number;\n    avatarId: number;\n    position: {\n        x: number;\n        y: number;\n        mapId: number;\n    };\n}\n\nexport interface FarmData {\n    farmId: number;\n    name: string;\n    level: number;\n    size: {\n        width: number;\n        height: number;\n    };\n    plots: any[];\n    buildings: any[];\n    moneyEarned: number;\n}\n\nexport enum GameDataEvent {\n    PLAYER_DATA_UPDATED = 'player_data_updated',\n    FARM_DATA_UPDATED = 'farm_data_updated',\n    INVENTORY_UPDATED = 'inventory_updated'\n}\n\n@ccclass('GameDataManager')\nexport class GameDataManager {\n    private static instance: GameDataManager;\n    private eventManager: EventManager;\n    \n    // 游戏数据\n    private playerData: PlayerData | null = null;\n    private farmData: FarmData | null = null;\n    private inventory: any[] = [];\n    private sessionToken: string = '';\n    \n    public static getInstance(): GameDataManager {\n        if (!GameDataManager.instance) {\n            GameDataManager.instance = new GameDataManager();\n        }\n        return GameDataManager.instance;\n    }\n    \n    private constructor() {\n        this.eventManager = EventManager.getInstance();\n    }\n    \n    // 设置会话令牌\n    public setSessionToken(token: string): void {\n        this.sessionToken = token;\n        // 保存到本地存储\n        localStorage.setItem('session_token', token);\n    }\n    \n    // 获取会话令牌\n    public getSessionToken(): string {\n        if (!this.sessionToken) {\n            this.sessionToken = localStorage.getItem('session_token') || '';\n        }\n        return this.sessionToken;\n    }\n    \n    // 清除会话令牌\n    public clearSessionToken(): void {\n        this.sessionToken = '';\n        localStorage.removeItem('session_token');\n    }\n    \n    // 设置玩家数据\n    public setPlayerData(data: any): void {\n        this.playerData = {\n            id: data.id || data.player_id,\n            name: data.name,\n            level: data.level,\n            gold: data.gold,\n            energy: data.energy,\n            maxEnergy: data.max_energy || data.maxEnergy,\n            avatarId: data.avatar_id || data.avatarId,\n            position: {\n                x: data.x_position || data.position?.x || 0,\n                y: data.y_position || data.position?.y || 0,\n                mapId: data.map_id || data.position?.map_id || data.position?.mapId || 1\n            }\n        };\n        \n        this.eventManager.emit(GameDataEvent.PLAYER_DATA_UPDATED, this.playerData);\n    }\n    \n    // 获取玩家数据\n    public getPlayerData(): PlayerData | null {\n        return this.playerData;\n    }\n    \n    // 更新玩家位置\n    public updatePlayerPosition(x: number, y: number, mapId?: number): void {\n        if (this.playerData) {\n            this.playerData.position.x = x;\n            this.playerData.position.y = y;\n            if (mapId !== undefined) {\n                this.playerData.position.mapId = mapId;\n            }\n            this.eventManager.emit(GameDataEvent.PLAYER_DATA_UPDATED, this.playerData);\n        }\n    }\n    \n    // 更新玩家金币\n    public updatePlayerGold(gold: number): void {\n        if (this.playerData) {\n            this.playerData.gold = gold;\n            this.eventManager.emit(GameDataEvent.PLAYER_DATA_UPDATED, this.playerData);\n        }\n    }\n    \n    // 更新玩家体力\n    public updatePlayerEnergy(energy: number): void {\n        if (this.playerData) {\n            this.playerData.energy = energy;\n            this.eventManager.emit(GameDataEvent.PLAYER_DATA_UPDATED, this.playerData);\n        }\n    }\n    \n    // 设置农场数据\n    public setFarmData(data: any): void {\n        this.farmData = {\n            farmId: data.farm_id || data.farmId,\n            name: data.name,\n            level: data.level,\n            size: {\n                width: data.size?.width || 10,\n                height: data.size?.height || 10\n            },\n            plots: data.plots || [],\n            buildings: data.buildings || [],\n            moneyEarned: data.money_earned || data.moneyEarned || 0\n        };\n        \n        this.eventManager.emit(GameDataEvent.FARM_DATA_UPDATED, this.farmData);\n    }\n    \n    // 获取农场数据\n    public getFarmData(): FarmData | null {\n        return this.farmData;\n    }\n    \n    // 设置背包数据\n    public setInventory(items: any[]): void {\n        this.inventory = items || [];\n        this.eventManager.emit(GameDataEvent.INVENTORY_UPDATED, this.inventory);\n    }\n    \n    // 获取背包数据\n    public getInventory(): any[] {\n        return this.inventory;\n    }\n    \n    // 添加物品到背包\n    public addItemToInventory(item: any): void {\n        this.inventory.push(item);\n        this.eventManager.emit(GameDataEvent.INVENTORY_UPDATED, this.inventory);\n    }\n    \n    // 从背包移除物品\n    public removeItemFromInventory(slot: number): void {\n        const index = this.inventory.findIndex(item => item.slot === slot);\n        if (index !== -1) {\n            this.inventory.splice(index, 1);\n            this.eventManager.emit(GameDataEvent.INVENTORY_UPDATED, this.inventory);\n        }\n    }\n    \n    // 更新背包物品\n    public updateInventoryItem(slot: number, quantity: number): void {\n        const item = this.inventory.find(item => item.slot === slot);\n        if (item) {\n            item.quantity = quantity;\n            if (quantity <= 0) {\n                this.removeItemFromInventory(slot);\n            } else {\n                this.eventManager.emit(GameDataEvent.INVENTORY_UPDATED, this.inventory);\n            }\n        }\n    }\n    \n    // 检查是否已登录\n    public isLoggedIn(): boolean {\n        return this.playerData !== null && this.sessionToken !== '';\n    }\n    \n    // 清除所有数据\n    public clearAllData(): void {\n        this.playerData = null;\n        this.farmData = null;\n        this.inventory = [];\n        this.clearSessionToken();\n        \n        this.eventManager.emit(GameDataEvent.PLAYER_DATA_UPDATED, null);\n        this.eventManager.emit(GameDataEvent.FARM_DATA_UPDATED, null);\n        this.eventManager.emit(GameDataEvent.INVENTORY_UPDATED, []);\n    }\n    \n    // 保存数据到本地存储\n    public saveToLocal(): void {\n        try {\n            if (this.playerData) {\n                localStorage.setItem('player_data', JSON.stringify(this.playerData));\n            }\n            if (this.farmData) {\n                localStorage.setItem('farm_data', JSON.stringify(this.farmData));\n            }\n            if (this.inventory.length > 0) {\n                localStorage.setItem('inventory_data', JSON.stringify(this.inventory));\n            }\n        } catch (error) {\n            console.error('Failed to save data to local storage:', error);\n        }\n    }\n    \n    // 从本地存储加载数据\n    public loadFromLocal(): void {\n        try {\n            const playerDataStr = localStorage.getItem('player_data');\n            if (playerDataStr) {\n                this.playerData = JSON.parse(playerDataStr);\n                this.eventManager.emit(GameDataEvent.PLAYER_DATA_UPDATED, this.playerData);\n            }\n            \n            const farmDataStr = localStorage.getItem('farm_data');\n            if (farmDataStr) {\n                this.farmData = JSON.parse(farmDataStr);\n                this.eventManager.emit(GameDataEvent.FARM_DATA_UPDATED, this.farmData);\n            }\n            \n            const inventoryDataStr = localStorage.getItem('inventory_data');\n            if (inventoryDataStr) {\n                this.inventory = JSON.parse(inventoryDataStr);\n                this.eventManager.emit(GameDataEvent.INVENTORY_UPDATED, this.inventory);\n            }\n        } catch (error) {\n            console.error('Failed to load data from local storage:', error);\n        }\n    }\n}\n"]}